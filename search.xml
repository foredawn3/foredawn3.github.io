<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>前端发请求的几种方式</title>
      <link href="/2024/10/20/%E5%89%8D%E7%AB%AF%E8%AF%B7%E6%B1%82/"/>
      <url>/2024/10/20/%E5%89%8D%E7%AB%AF%E8%AF%B7%E6%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="发请求的三种方式"><a href="#发请求的三种方式" class="headerlink" title="发请求的三种方式"></a>发请求的三种方式</h1><h2 id="1-Ajax"><a href="#1-Ajax" class="headerlink" title="1.Ajax"></a>1.Ajax</h2><h3 id="介绍："><a href="#介绍：" class="headerlink" title="介绍："></a>介绍：</h3><p><strong>AJAX</strong>（Asynchronous <a href="https://developer.mozilla.org/zh-CN/docs/Glossary/JavaScript">JavaScript</a> And <a href="https://developer.mozilla.org/zh-CN/docs/Glossary/XML">XML</a>）是一种在 Web 应用中通过异步发送 HTTP 请求向服务器获取内容，并使用这些新内容更新页面中相关的部分，而无需重新加载整个页面的 Web 开发技术。这可以让网页更具有响应性，因为只请求了需要更新的部分。</p><p>一开始的时候 AJAX 通过使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest"><code>XMLHttpRequest</code></a> 接口实现，但是 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window/fetch"><code>fetch()</code></a> API 更适合用于开发现代</p><p><code>XMLHttpRequest</code>（XHR）对象用于与服务器交互。通过 XMLHttpRequest 可以在不刷新页面的情况下请求特定 URL，获取数据。这允许网页在不影响用户操作的情况下，更新页面的局部内容。<code>XMLHttpRequest</code> 在 <a href="https://developer.mozilla.org/zh-CN/docs/Glossary/AJAX">AJAX</a> 编程中被大量使用。</p><h3 id="代码实现："><a href="#代码实现：" class="headerlink" title="代码实现："></a>代码实现：</h3><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">const</span> api1 = <span class="string">&quot;https://yapi.pro/mock/556287/user&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> api2 = <span class="string">&quot;https://yapi.pro/mock/556287/msg&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> ajaxGet = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.ajaxGet&quot;</span>);</span><br><span class="line"><span class="keyword">const</span> ajaxPost = <span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&quot;.ajaxPost&quot;</span>);</span><br><span class="line"></span><br><span class="line">ajaxGet.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">  xhr.<span class="title function_">open</span>(<span class="string">&quot;get&quot;</span>, api1, <span class="literal">true</span>);</span><br><span class="line">  xhr.<span class="property">onreadystatechange</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="title class_">XMLHttpRequest</span>.<span class="property">DONE</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (xhr.<span class="property">status</span> == <span class="number">200</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;ajaxGet请求成功&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">responseText</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;ajaxGet请求失败&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  xhr.<span class="title function_">send</span>();</span><br><span class="line">&#125;);</span><br><span class="line"><span class="comment">// ajaxPost</span></span><br><span class="line">ajaxPost.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> xhr = <span class="keyword">new</span> <span class="title class_">XMLHttpRequest</span>();</span><br><span class="line">  xhr.<span class="title function_">open</span>(<span class="string">&quot;post&quot;</span>, api2, <span class="literal">true</span>);</span><br><span class="line">  xhr.<span class="title function_">setRequestHeader</span>(<span class="string">&quot;Content-type&quot;</span>, <span class="string">&quot;application/x-www-form-urlencoded&quot;</span>);</span><br><span class="line">  xhr.<span class="property">onreadystatechange</span> = <span class="function">() =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">if</span> (xhr.<span class="property">readyState</span> === <span class="title class_">XMLHttpRequest</span>.<span class="property">DONE</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span> (xhr.<span class="property">status</span> === <span class="number">200</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;ajaxPost请求成功&quot;</span>);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(xhr.<span class="property">responseText</span>);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;ajaxPost请求失败&quot;</span>);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;;</span><br><span class="line">  xhr.<span class="title function_">send</span>(<span class="string">&quot;id=1&quot;</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/XMLHttpRequest">参考链接：XMLHttpRequest - Web API | MDN</a></p></blockquote><h2 id="2-fetch"><a href="#2-fetch" class="headerlink" title="2.fetch"></a>2.fetch</h2><h3 id="介绍：-1"><a href="#介绍：-1" class="headerlink" title="介绍："></a>介绍：</h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Window"><code>Window</code></a> 接口的 <strong>fetch()</strong> 方法用于发起获取资源的请求，它会返回一个会在请求响应后兑现的 promise。</p><p>该 promise 会兑现一个表示请求响应的 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Response"><code>Response</code></a> 对象。</p><p>当请求失败（例如，因为请求 URL 的格式错误或网络错误）时，<code>fetch()</code> 的 promise 才会被拒绝。<code>fetch()</code> 的 promise <em>不会</em>因为服务器响应表示错误的 HTTP 状态码（<code>404</code>、<code>504</code>，等）而被拒绝。因此，<code>then()</code> 处理器必须检查 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Response/ok"><code>Response.ok</code></a> 和&#x2F;或 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Response/status"><code>Response.status</code></a> 属性。</p><h3 id="代码实现：-1"><a href="#代码实现：-1" class="headerlink" title="代码实现："></a>代码实现：</h3><h4 id="get-请求："><a href="#get-请求：" class="headerlink" title="get 请求："></a>get 请求：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">promise方式：</span><br><span class="line"></span><br><span class="line">      fetchGet.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>,  <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">fetch</span>(api1)</span><br><span class="line">          .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 首先检查响应状态</span></span><br><span class="line">            <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">              <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(</span><br><span class="line">                <span class="string">&quot;Network response was not ok &quot;</span> + response.<span class="property">statusText</span></span><br><span class="line">              );</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="comment">// 解析JSON格式的响应体</span></span><br><span class="line">            <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">          &#125;)</span><br><span class="line">          .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 处理获取到的数据</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;fetchGet请求成功&quot;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">          &#125;)</span><br><span class="line">          .<span class="title function_">catch</span>(<span class="function">(<span class="params">error</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="comment">// 处理请求过程中出现的任何错误</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;fetchGet请求失败&quot;</span>);</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> 语法改写：</span><br><span class="line">     fetchGet.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">fetch</span>(api1);</span><br><span class="line">         <span class="keyword">let</span> data = <span class="keyword">await</span> result.<span class="title function_">json</span>();</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;fetchGet请求成功&quot;</span>);</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;fetchGet请求失败&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h4 id="post-请求："><a href="#post-请求：" class="headerlink" title="post 请求："></a>post 请求：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">promise方式：</span><br><span class="line"></span><br><span class="line">      fetchPost.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        <span class="title function_">fetch</span>(api2, &#123;</span><br><span class="line">          <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">          <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Content-type&quot;</span>: <span class="string">&quot;application/x-www-from-urlencoded&quot;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">          <span class="attr">body</span>: <span class="string">&quot;id=1&quot;</span>,</span><br><span class="line">        &#125;)</span><br><span class="line">          .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">          &#125;)</span><br><span class="line">          .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;fetchPost请求成功&quot;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">          &#125;);</span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> 语法改写：</span><br><span class="line"></span><br><span class="line">     fetchPost.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">fetch</span>(api2, &#123;</span><br><span class="line">           <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">           <span class="attr">headers</span>: &#123;</span><br><span class="line">             <span class="string">&quot;Content-type&quot;</span>: <span class="string">&quot;application/x-www-from-urlencoded&quot;</span>,</span><br><span class="line">           &#125;,</span><br><span class="line">           <span class="attr">body</span>: <span class="string">&quot;id=1&quot;</span>,</span><br><span class="line">         &#125;);</span><br><span class="line">         <span class="keyword">let</span> data = <span class="keyword">await</span> result.<span class="title function_">json</span>();</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;fetchPost请求成功&quot;</span>);</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;fetchPost请求失败&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//   fetchPost</span></span><br><span class="line">fetchPost.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">  <span class="comment">// try &#123;</span></span><br><span class="line">  <span class="comment">//   let result = await fetch(api2, &#123;</span></span><br><span class="line">  <span class="comment">//     method: &quot;POST&quot;,</span></span><br><span class="line">  <span class="comment">//     headers: &#123;</span></span><br><span class="line">  <span class="comment">//       &quot;Content-type&quot;: &quot;application/x-www-from-urlencoded&quot;,</span></span><br><span class="line">  <span class="comment">//     &#125;,</span></span><br><span class="line">  <span class="comment">//     body: &quot;id=1&quot;,</span></span><br><span class="line">  <span class="comment">//   &#125;);</span></span><br><span class="line">  <span class="comment">//   let data = await result.json();</span></span><br><span class="line">  <span class="comment">//   console.log(&quot;fetchPost请求成功&quot;);</span></span><br><span class="line">  <span class="comment">//   console.log(data);</span></span><br><span class="line">  <span class="comment">// &#125; catch (error) &#123;</span></span><br><span class="line">  <span class="comment">//   console.log(&quot;fetchPost请求失败&quot;);</span></span><br><span class="line">  <span class="comment">// &#125;</span></span><br><span class="line">  <span class="title function_">fetch</span>(api2, &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="string">&quot;Content-type&quot;</span>: <span class="string">&quot;application/x-www-from-urlencoded&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">body</span>: <span class="string">&quot;id=1&quot;</span>,</span><br><span class="line">  &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> response.<span class="title function_">json</span>();</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">data</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;fetchPost请求成功&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(data);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><blockquote><p><a href="https://www.ruanyifeng.com/blog/2020/12/fetch-tutorial.html">参考链接：Fetch API 教程 - 阮一峰的网络日志</a></p></blockquote><h2 id="3-axios"><a href="#3-axios" class="headerlink" title="3.axios"></a>3.axios</h2><h3 id="介绍：-2"><a href="#介绍：-2" class="headerlink" title="介绍："></a>介绍：</h3><p>Axios 是一个基于 <em>promise</em> 网络请求库，作用于<a href="https://nodejs.org/"><code>node.js</code></a> 和浏览器中。 它是 <em>isomorphic</em> 的(即同一套代码可以运行在浏览器和 node.js 中)。在服务端它使用原生 node.js <code>http</code> 模块, 而在客户端 (浏览端) 则使用 XMLHttpRequests。</p><h3 id="使用方式："><a href="#使用方式：" class="headerlink" title="使用方式："></a>使用方式：</h3><p>由于 Axios 是一个库，所以使用需要先安装</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ npm install axios</span><br></pre></td></tr></table></figure><p>或者使用 cdn</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">使用 jsDelivr <span class="attr">CDN</span>:</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.jsdelivr.net/npm/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">使用 unpkg <span class="attr">CDN</span>:</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://unpkg.com/axios/dist/axios.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure><h3 id="代码实现：-2"><a href="#代码实现：-2" class="headerlink" title="代码实现："></a>代码实现：</h3><h4 id="get-请求：-1"><a href="#get-请求：-1" class="headerlink" title="get 请求："></a>get 请求：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//   axiosGet</span></span><br><span class="line">axiosGet.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">  axios</span><br><span class="line">    .<span class="title function_">get</span>(api1)</span><br><span class="line">    .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;axiosGet请求成功&quot;</span>);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">data</span>);</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;axiosGet请求失败&quot;</span>);</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><h4 id="post-请求：-1"><a href="#post-请求：-1" class="headerlink" title="post 请求："></a>post 请求：</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">promise方式：</span><br><span class="line"></span><br><span class="line">      axiosPost.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="function">() =&gt;</span> &#123;</span><br><span class="line">        axios</span><br><span class="line">          .<span class="title function_">post</span>(</span><br><span class="line">            api2,</span><br><span class="line">            &#123; <span class="attr">id</span>: <span class="number">1</span> &#125;,</span><br><span class="line">            &#123; <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-type&quot;</span>: <span class="string">&quot;application/x-www-from-urlencoded&quot;</span> &#125; &#125;</span><br><span class="line">          )</span><br><span class="line">          .<span class="title function_">then</span>(<span class="function">(<span class="params">response</span>) =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;axiosPost请求成功&quot;</span>);</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(response.<span class="property">data</span>);</span><br><span class="line">          &#125;)</span><br><span class="line">          .<span class="title function_">catch</span>(<span class="function">() =&gt;</span> &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;axiosPost请求失败&quot;</span>);</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">      &#125;);</span><br></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">await</span> 语法改写：</span><br><span class="line"></span><br><span class="line">     axiosPost.<span class="title function_">addEventListener</span>(<span class="string">&quot;click&quot;</span>, <span class="title function_">async</span> () =&gt; &#123;</span><br><span class="line">       <span class="keyword">try</span> &#123;</span><br><span class="line">         <span class="keyword">let</span> result = <span class="keyword">await</span> <span class="title function_">axios</span>(&#123;</span><br><span class="line">           <span class="attr">method</span>: <span class="string">&quot;post&quot;</span>,</span><br><span class="line">           <span class="attr">url</span>: <span class="string">&quot;https://yapi.pro/mock/556287/msg&quot;</span>,</span><br><span class="line">           <span class="attr">data</span>: &#123;</span><br><span class="line">             <span class="attr">id</span>: <span class="number">1</span>,</span><br><span class="line">           &#125;,</span><br><span class="line">           <span class="attr">headers</span>: &#123;</span><br><span class="line">             <span class="string">&quot;Content-type&quot;</span>: <span class="string">&quot;application/x-www-from-urlencoded&quot;</span>,</span><br><span class="line">           &#125;,</span><br><span class="line">         &#125;);</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;axiosPost请求成功&quot;</span>);</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(result.<span class="property">data</span>);</span><br><span class="line">       &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">         <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;axiosPost请求失败&quot;</span>);</span><br><span class="line">       &#125;</span><br><span class="line">     &#125;);</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 前端 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2024/07/20/hello-world/"/>
      <url>/2024/07/20/hello-world/</url>
      
        <content type="html"><![CDATA[<p>欢迎来到 简言的博客！这是我的第一篇文章。</p>]]></content>
      
      
      <categories>
          
          <category> test1 </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[<h4 id="欢迎来到我的博客！我叫简言。这个博客是为了记录我的生活-思考-🤔，并与各位旅行者一起交流-探讨-学习。希望我的博客能带给你一些有益的信息。期待与你一起探索-分享-成长，欢迎你关注我，并留下你的评论！"><a href="#欢迎来到我的博客！我叫简言。这个博客是为了记录我的生活-思考-🤔，并与各位旅行者一起交流-探讨-学习。希望我的博客能带给你一些有益的信息。期待与你一起探索-分享-成长，欢迎你关注我，并留下你的评论！" class="headerlink" title="欢迎来到我的博客！我叫简言。这个博客是为了记录我的生活&#x2F;思考 🤔，并与各位旅行者一起交流&#x2F;探讨&#x2F;学习。希望我的博客能带给你一些有益的信息。期待与你一起探索&#x2F;分享&#x2F;成长，欢迎你关注我，并留下你的评论！"></a>欢迎来到我的博客！我叫简言。这个博客是为了记录我的生活&#x2F;思考 🤔，并与各位旅行者一起交流&#x2F;探讨&#x2F;学习。希望我的博客能带给你一些有益的信息。期待与你一起探索&#x2F;分享&#x2F;成长，欢迎你关注我，并留下你的评论！</h4>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>电影</title>
      <link href="/movies/index.html"/>
      <url>/movies/index.html</url>
      
        <content type="html"><![CDATA[<iframe src="/videos/bigBang.mp4" width='100%' height='500px' ></iframe>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>音乐</title>
      <link href="/music/index.html"/>
      <url>/music/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>demo</title>
      <link href="/code/index.html"/>
      <url>/code/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>相册</title>
      <link href="/photo/index.html"/>
      <url>/photo/index.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main"><figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">壁纸</div>  <p>收藏的一些壁纸</p>  <a href='/photo/wallpaper'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">漫威</div>  <p>关于漫威的图片</p>  <a href='/photo/marvel'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src='https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">OH MY GIRL</div>  <p>关于OH MY GIRL的图片</p>  <a href='/photo/ohmygirl'></a>  </figcaption>  </figure>  </div>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>照片</title>
      <link href="/photo/ohmygirl/index.html"/>
      <url>/photo/ohmygirl/index.html</url>
      
        <content type="html"><![CDATA[<div class="gallery-group-main"><div class="gallery-container" data-type="data" data-button="">      <div class="gallery-data">[{"url":"https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg","alt":""},{"url":"https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg","alt":""}]</div>      <div class="gallery-items">      </div>    </div></div>]]></content>
      
    </entry>
    
    
  
</search>
